<?xml version="1.0" encoding="UTF-8"?>
<Settings><!--This file was automatically generated by Ruby plugin.
You are allowed to: 
1. Remove rake task
2. Add existing rake tasks
To add existing rake tasks automatically delete this file and reload the project.
--><RakeGroup description="" fullCmd="" taksId="rake"><RakeTask description="Add schema information (as comments) to model files" fullCmd="annotate_models" taksId="annotate_models" /><RakeTask description="Check uncommitted files" fullCmd="check_uncommitted_files" taksId="check_uncommitted_files" /><RakeTask description="Commit changes to subversion and run tests" fullCmd="ci" taksId="ci" /><RakeGroup description="" fullCmd="" taksId="db"><RakeTask description="Raises an error if there are pending migrations" fullCmd="db:abort_if_pending_migrations" taksId="abort_if_pending_migrations" /><RakeTask description="Retrieves the charset for the current environment's database" fullCmd="db:charset" taksId="charset" /><RakeTask description="Retrieves the collation for the current environment's database" fullCmd="db:collation" taksId="collation" /><RakeTask description="Create the database defined in config/database.yml for the current RAILS_ENV" fullCmd="db:create" taksId="create" /><RakeGroup description="" fullCmd="" taksId="create"><RakeTask description="Create all the local databases defined in config/database.yml" fullCmd="db:create:all" taksId="all" /></RakeGroup><RakeTask description="Drops the database for the current RAILS_ENV" fullCmd="db:drop" taksId="drop" /><RakeGroup description="" fullCmd="" taksId="drop"><RakeTask description="Drops all the local databases defined in config/database.yml" fullCmd="db:drop:all" taksId="all" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="fixtures"><RakeTask description="Search for a fixture given a LABEL or ID" fullCmd="db:fixtures:identify" taksId="identify" /><RakeTask description="Load fixtures into the current environment's database" fullCmd="db:fixtures:load" taksId="load" /></RakeGroup><RakeTask description="Migrate the database through scripts in db/migrate" fullCmd="db:migrate" taksId="migrate" /><RakeGroup description="" fullCmd="" taksId="migrate"><RakeTask description="Runs the &quot;down&quot; for a given migration VERSION" fullCmd="db:migrate:down" taksId="down" /><RakeTask description="Rollbacks the database one migration and re migrate up" fullCmd="db:migrate:redo" taksId="redo" /><RakeTask description="Resets your database using your migrations for the current environment" fullCmd="db:migrate:reset" taksId="reset" /><RakeTask description="Runs the &quot;up&quot; for a given migration VERSION" fullCmd="db:migrate:up" taksId="up" /></RakeGroup><RakeTask description="Drops and recreates the database from db/schema.rb for the current environment" fullCmd="db:reset" taksId="reset" /><RakeTask description="Rolls the schema back to the previous version" fullCmd="db:rollback" taksId="rollback" /><RakeGroup description="" fullCmd="" taksId="schema"><RakeTask description="Create a db/schema.rb file that can be portably used against any DB supported by AR" fullCmd="db:schema:dump" taksId="dump" /><RakeTask description="Load a schema.rb file into the database" fullCmd="db:schema:load" taksId="load" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="sessions"><RakeTask description="Clear the sessions table" fullCmd="db:sessions:clear" taksId="clear" /><RakeTask description="Creates a sessions migration for use with CGI::Session::ActiveRecordStore" fullCmd="db:sessions:create" taksId="create" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="structure"><RakeTask description="Dump the database structure to a SQL file" fullCmd="db:structure:dump" taksId="dump" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="test"><RakeTask description="Recreate the test database from the current environment's database schema" fullCmd="db:test:clone" taksId="clone" /><RakeTask description="Recreate the test databases from the development structure" fullCmd="db:test:clone_structure" taksId="clone_structure" /><RakeTask description="Recreate the test database from the current schema.rb" fullCmd="db:test:load" taksId="load" /><RakeTask description="Check for pending migrations and load the test schema" fullCmd="db:test:prepare" taksId="prepare" /><RakeTask description="Empty the test database" fullCmd="db:test:purge" taksId="purge" /></RakeGroup><RakeTask description="Retrieves the current schema version number" fullCmd="db:version" taksId="version" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="doc"><RakeTask description="Build the RDOC HTML Files" fullCmd="doc:app" taksId="app" /><RakeTask description="Remove rdoc products" fullCmd="doc:clobber_app" taksId="clobber_app" /><RakeTask description="Remove plugin documentation" fullCmd="doc:clobber_plugins" taksId="clobber_plugins" /><RakeTask description="Remove rdoc products" fullCmd="doc:clobber_rails" taksId="clobber_rails" /><RakeTask description="Generate Rails guides" fullCmd="doc:guides" taksId="guides" /><RakeTask description="Generate documentation for all installed plugins" fullCmd="doc:plugins" taksId="plugins" /><RakeGroup description="" fullCmd="" taksId="plugins"><RakeTask description="Generate documentation for the acts_as_list plugin" fullCmd="doc:plugins:acts_as_list" taksId="acts_as_list" /><RakeTask description="Generate documentation for the annotate_models plugin" fullCmd="doc:plugins:annotate_models" taksId="annotate_models" /><RakeTask description="Generate documentation for the exception_notification plugin" fullCmd="doc:plugins:exception_notification" taksId="exception_notification" /><RakeTask description="Generate documentation for the flashback plugin" fullCmd="doc:plugins:flashback" taksId="flashback" /><RakeTask description="Generate documentation for the immutable_attributes plugin" fullCmd="doc:plugins:immutable_attributes" taksId="immutable_attributes" /><RakeTask description="Generate documentation for the less-reverse-captcha plugin" fullCmd="doc:plugins:less-reverse-captcha" taksId="less-reverse-captcha" /><RakeTask description="Generate documentation for the less_authentication plugin" fullCmd="doc:plugins:less_authentication" taksId="less_authentication" /><RakeTask description="Generate documentation for the less_js_routes plugin" fullCmd="doc:plugins:less_js_routes" taksId="less_js_routes" /><RakeTask description="Generate documentation for the less_monkey_patching plugin" fullCmd="doc:plugins:less_monkey_patching" taksId="less_monkey_patching" /><RakeTask description="Generate documentation for the pseudocursors plugin" fullCmd="doc:plugins:pseudocursors" taksId="pseudocursors" /><RakeTask description="Generate documentation for the query_stats plugin" fullCmd="doc:plugins:query_stats" taksId="query_stats" /><RakeTask description="Generate documentation for the rails-footnotes plugin" fullCmd="doc:plugins:rails-footnotes" taksId="rails-footnotes" /><RakeTask description="Generate documentation for the rows_logger plugin" fullCmd="doc:plugins:rows_logger" taksId="rows_logger" /><RakeTask description="Generate documentation for the shoulda plugin" fullCmd="doc:plugins:shoulda" taksId="shoulda" /><RakeTask description="Generate documentation for the spider_test plugin" fullCmd="doc:plugins:spider_test" taksId="spider_test" /><RakeTask description="Generate documentation for the thinking-sphinx plugin" fullCmd="doc:plugins:thinking-sphinx" taksId="thinking-sphinx" /></RakeGroup><RakeTask description="Build the RDOC HTML Files" fullCmd="doc:rails" taksId="rails" /><RakeTask description="Force a rebuild of the RDOC files" fullCmd="doc:reapp" taksId="reapp" /><RakeTask description="Force a rebuild of the RDOC files" fullCmd="doc:rerails" taksId="rerails" /><RakeTask description="" fullCmd="doc:clobber" taksId="clobber" /></RakeGroup><RakeTask description="List the gems that this rails application depends on" fullCmd="gems" taksId="gems" /><RakeGroup description="" fullCmd="" taksId="gems"><RakeTask description="Build any native extensions for unpacked gems" fullCmd="gems:build" taksId="build" /><RakeGroup description="" fullCmd="" taksId="dependent"><RakeTask description="Install gems required for lovd-by-less" fullCmd="gems:dependent:install" taksId="install" /></RakeGroup><RakeTask description="Installs all required gems for this application" fullCmd="gems:install" taksId="install" /><RakeTask description="Regenerate gem specifications in correct format" fullCmd="gems:refresh_specs" taksId="refresh_specs" /><RakeTask description="Unpacks the specified gem into vendor/gems" fullCmd="gems:unpack" taksId="unpack" /><RakeGroup description="" fullCmd="" taksId="unpack"><RakeTask description="Unpacks the specified gems and its dependencies into vendor/gems" fullCmd="gems:unpack:dependencies" taksId="dependencies" /></RakeGroup><RakeTask description="" fullCmd="gems:base" taksId="base" /></RakeGroup><RakeTask description="Make a js file that will have functions that will return restful routes/urls" fullCmd="js_routes" taksId="js_routes" /><RakeGroup description="" fullCmd="" taksId="less"><RakeGroup description="" fullCmd="" taksId="js"><RakeTask description="Make a js file that will have functions that will return restful routes/urls" fullCmd="less:js:routes" taksId="routes" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="log"><RakeTask description="Truncates all *.log files in log/ to zero bytes" fullCmd="log:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="lovdbyless"><RakeTask description="Getting started with lovd-by-less" fullCmd="lovdbyless:getting_started" taksId="getting_started" /><RakeTask description="" fullCmd="lovdbyless:check" taksId="check" /></RakeGroup><RakeTask description="Enumerate all annotations" fullCmd="notes" taksId="notes" /><RakeGroup description="" fullCmd="" taksId="notes"><RakeTask description="Enumerate a custom annotation, specify with ANNOTATION=WTFHAX" fullCmd="notes:custom" taksId="custom" /><RakeTask description="Enumerate all FIXME annotations" fullCmd="notes:fixme" taksId="fixme" /><RakeTask description="Enumerate all OPTIMIZE annotations" fullCmd="notes:optimize" taksId="optimize" /><RakeTask description="Enumerate all TODO annotations" fullCmd="notes:todo" taksId="todo" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="rails"><RakeGroup description="" fullCmd="" taksId="freeze"><RakeTask description="Lock to latest Edge Rails, for a specific release use RELEASE=1.2.0" fullCmd="rails:freeze:edge" taksId="edge" /><RakeTask description="Lock this application to the current gems (by unpacking them into vendor/rails)" fullCmd="rails:freeze:gems" taksId="gems" /></RakeGroup><RakeTask description="Unlock this application from freeze of gems or edge and return to a fluid use of system gems" fullCmd="rails:unfreeze" taksId="unfreeze" /><RakeTask description="Update both configs, scripts and public/javascripts from Rails" fullCmd="rails:update" taksId="update" /><RakeGroup description="" fullCmd="" taksId="update"><RakeTask description="Update config/boot.rb from your current rails install" fullCmd="rails:update:configs" taksId="configs" /><RakeTask description="Update your javascripts from your current rails install" fullCmd="rails:update:javascripts" taksId="javascripts" /><RakeTask description="Add new scripts to the application script/ directory" fullCmd="rails:update:scripts" taksId="scripts" /></RakeGroup></RakeGroup><RakeTask description="Print out all defined routes in match order, with names" fullCmd="routes" taksId="routes" /><RakeTask description="Generate a crytographically secure secret key" fullCmd="secret" taksId="secret" /><RakeGroup description="" fullCmd="" taksId="shoulda"><RakeTask description="Converts a YAML file (FILE=./path/to/yaml) into a Shoulda skeleton" fullCmd="shoulda:from_yaml" taksId="from_yaml" /><RakeTask description="List the names of the test methods in a specification like format" fullCmd="shoulda:list" taksId="list" /></RakeGroup><RakeTask description="Report code statistics (KLOCs, etc) from the application" fullCmd="stats" taksId="stats" /><RakeTask description="Run 'svn commit' command" fullCmd="svn_commit" taksId="svn_commit" /><RakeTask description="Run 'svn update' command" fullCmd="svn_update" taksId="svn_update" /><RakeTask description="Run all unit, functional and integration tests" fullCmd="test" taksId="test" /><RakeGroup description="" fullCmd="" taksId="test"><RakeTask description="Run tests for benchmarkdb:test:prepare / Benchmark the performance tests" fullCmd="test:benchmark" taksId="benchmark" /><RakeTask description="Run tests for functionalsdb:test:prepare / Run the functional tests in test/functional" fullCmd="test:functionals" taksId="functionals" /><RakeTask description="Run tests for integrationdb:test:prepare / Run the integration tests in test/integration" fullCmd="test:integration" taksId="integration" /><RakeTask description="Run tests for pluginsenvironment / Run the plugin tests in vendor/plugins/*/**/test (or specify with PLUGIN=name)" fullCmd="test:plugins" taksId="plugins" /><RakeTask description="Run tests for profiledb:test:prepare / Profile the performance tests" fullCmd="test:profile" taksId="profile" /><RakeTask description="Run tests for recentdb:test:prepare / Test recent changes" fullCmd="test:recent" taksId="recent" /><RakeTask description="Run tests for uncommitteddb:test:prepare / Test changes since last checkin (only Subversion and Git)" fullCmd="test:uncommitted" taksId="uncommitted" /><RakeTask description="Run tests for unitsdb:test:prepare / Run the unit tests in test/unit" fullCmd="test:units" taksId="units" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="thinking_sphinx"><RakeTask description="Generate the Sphinx configuration file using Thinking Sphinx's settings" fullCmd="thinking_sphinx:configure" taksId="configure" /><RakeTask description="Process stored delta index requests" fullCmd="thinking_sphinx:delayed_delta" taksId="delayed_delta" /><RakeTask description="Index data for Sphinx using Thinking Sphinx's settings" fullCmd="thinking_sphinx:index" taksId="index" /><RakeTask description="Restart Sphinx" fullCmd="thinking_sphinx:restart" taksId="restart" /><RakeTask description="Stop if running, then start a Sphinx searchd daemon using Thinking Sphinx's settings" fullCmd="thinking_sphinx:running_start" taksId="running_start" /><RakeTask description="Start a Sphinx searchd daemon using Thinking Sphinx's settings" fullCmd="thinking_sphinx:start" taksId="start" /><RakeTask description="Stop Sphinx using Thinking Sphinx's settings" fullCmd="thinking_sphinx:stop" taksId="stop" /><RakeTask description="" fullCmd="thinking_sphinx:app_env" taksId="app_env" /><RakeGroup description="" fullCmd="" taksId="index"><RakeTask description="" fullCmd="thinking_sphinx:index:delta" taksId="delta" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="time"><RakeGroup description="" fullCmd="" taksId="zones"><RakeTask description="Displays names of all time zones recognized by the Rails TimeZone class, grouped by offset" fullCmd="time:zones:all" taksId="all" /><RakeTask description="Displays names of time zones recognized by the Rails TimeZone class with the same offset as the system local time" fullCmd="time:zones:local" taksId="local" /><RakeTask description="Displays names of US time zones recognized by the Rails TimeZone class, grouped by offset" fullCmd="time:zones:us" taksId="us" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="tmp"><RakeGroup description="" fullCmd="" taksId="cache"><RakeTask description="Clears all files and directories in tmp/cache" fullCmd="tmp:cache:clear" taksId="clear" /></RakeGroup><RakeTask description="Clear session, cache, and socket files from tmp/" fullCmd="tmp:clear" taksId="clear" /><RakeTask description="Creates tmp directories for sessions, cache, and sockets" fullCmd="tmp:create" taksId="create" /><RakeGroup description="" fullCmd="" taksId="pids"><RakeTask description="Clears all files in tmp/pids" fullCmd="tmp:pids:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="sessions"><RakeTask description="Clears all files in tmp/sessions" fullCmd="tmp:sessions:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="sockets"><RakeTask description="Clears all files in tmp/sockets" fullCmd="tmp:sockets:clear" taksId="clear" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="ts"><RakeTask description="Generate the Sphinx configuration file using Thinking Sphinx's settings" fullCmd="ts:conf" taksId="conf" /><RakeTask description="Generate the Sphinx configuration file using Thinking Sphinx's settings" fullCmd="ts:config" taksId="config" /><RakeTask description="Process stored delta index requests" fullCmd="ts:dd" taksId="dd" /><RakeTask description="Index data for Sphinx using Thinking Sphinx's settings" fullCmd="ts:in" taksId="in" /><RakeGroup description="" fullCmd="" taksId="in"><RakeTask description="Index Thinking Sphinx datetime delta indexes" fullCmd="ts:in:delta" taksId="delta" /></RakeGroup><RakeTask description="Restart Sphinx" fullCmd="ts:restart" taksId="restart" /><RakeTask description="Stop if running, then start a Sphinx searchd daemon using Thinking Sphinx's settings" fullCmd="ts:run" taksId="run" /><RakeTask description="Start a Sphinx searchd daemon using Thinking Sphinx's settings" fullCmd="ts:start" taksId="start" /><RakeTask description="Stop Sphinx using Thinking Sphinx's settings" fullCmd="ts:stop" taksId="stop" /><RakeTask description="" fullCmd="ts:index" taksId="index" /></RakeGroup><RakeTask description="" fullCmd="default" taksId="default" /><RakeTask description="" fullCmd="doc" taksId="doc" /><RakeTask description="" fullCmd="doc/api" taksId="doc/api" /><RakeTask description="" fullCmd="doc/api/index.html" taksId="doc/api/index.html" /><RakeTask description="" fullCmd="doc/app" taksId="doc/app" /><RakeTask description="" fullCmd="doc/app/index.html" taksId="doc/app/index.html" /><RakeTask description="" fullCmd="environment" taksId="environment" /><RakeTask description="" fullCmd="mig" taksId="mig" /></RakeGroup></Settings>
